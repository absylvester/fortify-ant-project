<project name="fortify-java-project" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">

<!-- Properties for various directories defined -->
  <property name="project.name" value="${ant.project.name}" />
  <property name="project.version" value="1.0" />
  <property name="target.name" value="${project.name}-${project.version}.jar" />
  <property name="src.dir" location="src" />
  <property name="lib.dir" location="lib" />
  <property name="build.dir" location="build" />
  <property name="build.classes.dir" location="build/classes" />
  <property name="test.dir" location="test" />
  <property name="test.classes.dir" location="${test.dir}/classes" />
  <property name="dist.dir" location="dist" />
  <property name="target.jar" value="${dist.dir}/${target.name}" />

<!-- Classpaths defined to be referred later during the process -->
  <path id="compile.classpath">
     <fileset dir="lib">
         <include name="*.jar" />
     </fileset>
  </path>

  <path id="build.classpath">
     <path refid="compile.classpath"/>
     <pathelement location="${build.classes.dir}" />
  </path>

  <path id="test.compile.classpath">
     <path refid="compile.classpath" />
     <pathelement location="${build.classes.dir}" />
  </path>

  <path id="test.classpath">
     <path refid="build.classpath" />
     <pathelement location="${test.classes.dir}" />
  </path>

<!-- Targets made.  Build process begins here -->
  <target name="init">
      <mkdir dir="${build.classes.dir}" />
      <mkdir dir="${lib.dir}" />
      <mkdir dir="${dist.dir}" />
  </target>

  <target name="resolve"  depends="init">
     <ivy:resolve file="ivy.xml"/>
  </target>

  <target name="retrieve" depends="resolve">
     <ivy:retrieve pattern="${lib.dir}/[artifact]-[type]-[revision].[ext]" />
  </target>

  <target name="compile" depends="resolve,retrieve">
      <javac srcdir="${src.dir}" 
             debug="true"
             includeAntRuntime="true"
             destdir="${build.classes.dir}">
        <classpath refid="build.classpath" />
      </javac>
      <move todir="${build.classes.dir}">
          <fileset dir="${lib.dir}">
             <include name="**/log4j*"/>
             <exclude name="**/*.jar" />
          </fileset>
      </move>
  </target>

  <target name="log4j-move" depends="compile">
     <move todir="${build.classes.dir}">
          <filelist dir="${lib.dir}">
             <file name="log4j-api-jar-2.13.3.jar"/>
             <file name="log4j-core-jar-2.13.3.jar" />
          </filelist>
      </move>
     <move todir="${build.classes.dir}">
          <filelist dir="${src.dir}">
             <file name="log4j2.xml"/>
             <file name="log4j2.properties"/>
          </filelist>
      </move>
  </target>

  <target name="test-init" depends="compile">
      <mkdir dir="${test.classes.dir}" />
  </target>

  <target name="test-compile" depends="compile,test-init">
       <javac srcdir="${test.dir}"  
             debug="true" 
             includeAntRuntime="true" 
             destdir="${test.classes.dir}">
        <classpath refid="test.compile.classpath" />
        </javac>
  </target>

  <target name="test" depends="test-compile">
     <junit printsummary="true" haltonfailure="true">
         <classpath refid="test.classpath"/>
         <classpath refid="test.compile.classpath" />
         <formatter type="brief" usefile="false" />
         <test name="EntryToLogTest" />
     </junit>
  </target>

<!-- For Execute, fork attribute was added to avoid ClassCastException.  Need to find a way to pass the key "OpenSesame!" -->
  <target name="execute" depends="test">
     <java fork="true" classname="EntryToLogRunner" classpath="${build.classes.dir}">
         <classpath refid="build.classpath" />
         <arg line="OpenSesame!" />
     </java>
  </target>

  <target name="package" depends="execute">
      <copy todir="${build.classes.dir}">
          <filelist dir="${src.dir}/resources">
             <file name="log4j2.xml"/>
             <file name="log4j2.properties"/>
          </filelist>
      </copy>
     <jar destfile="${target.jar}" duplicate="preserve" compress="true" >
      <fileset dir="${build.classes.dir}"/>
      <fileset dir="${lib.dir}" >
         <filename name="log4j-*"/>
      </fileset>
       <manifest>
          <attribute name="Main-Class" value="EntryToLogRunner" />
          <attribute name="Class-Path" value="log4j-api-jar-2.13.3.jar log4j-api-javadoc-2.13.3.jar log4j-api-source-2.13.3.jar log4j-api-test-jar-2.13.3.jar log4j-bundle-1.2.17.jar log4j-core-jar-2.13.3.jar log4j-core-javadoc-2.13.3.jar log4j-core-source-2.13.3.jar commons-logging-jar-1.2.jar" />
       </manifest>
    </jar>
  </target>

<!-- Jar file is published to Artifactory and several directories are deleted -->
  <target name="artifactory-publish" depends="package">
      <ivy:publish resolver="artifactory-publish" pubrevision="${project.version}" overwrite="true"
        artifactspattern="${dist.dir}/[artifact]-[revision].[ext]"/>
  </target>

  <target name="clean" depends="artifactory-publish">
      <delete dir="${build.classes.dir}" />
      <delete dir="${test.classes.dir}" />
      <delete dir="${lib.dir}" />
      <delete dir="${dist.dir}" />
  </target>

<!-- Separate target used to show the Java version Ant uses -->
  <target name="print-version"> 
   <echo>Java/JVM version: ${ant.java.version}</echo> 
   <echo>Java/JVM detail version: ${java.version}</echo> 
  </target>

</project>
